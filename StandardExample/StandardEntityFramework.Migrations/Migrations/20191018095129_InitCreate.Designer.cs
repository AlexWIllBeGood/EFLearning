// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StandardEntityFramework;

namespace StandardEntityFramework.Migrations.Migrations
{
    [DbContext(typeof(LocalDbContext))]
    [Migration("20191018095129_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("StandardModels.Models.ArrangeCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StudentId");

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ArrangeCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StudentId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            StudentId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            StudentId = 3,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 4,
                            StudentId = 4,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 5,
                            StudentId = 5,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 6,
                            StudentId = 5,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 7,
                            StudentId = 2,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 8,
                            StudentId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 9,
                            StudentId = 5,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 10,
                            StudentId = 3,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 11,
                            StudentId = 4,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 12,
                            StudentId = 5,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 13,
                            StudentId = 1,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 14,
                            StudentId = 5,
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("StandardModels.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("StudentTest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "s1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "s2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "s3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "s4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "s5"
                        });
                });

            modelBuilder.Entity("StandardModels.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TeacherTest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "t1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "t2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "t3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "t4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "t5"
                        });
                });

            modelBuilder.Entity("StandardModels.Models.ArrangeCourse", b =>
                {
                    b.HasOne("StandardModels.Models.Student", "Student")
                        .WithMany("ArrangeCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StandardModels.Models.Teacher", "Teacher")
                        .WithMany("ArrangeCourses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
